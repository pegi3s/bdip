:host {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.search-container {
  color: white;
  display: flex;
  position: relative;
  flex-direction: column;
  gap: 10svh;
  transition: all 400ms cubic-bezier(0.57, 0, 0, 1);
  background-color: rgb(0 123 255);
  padding: 24px;
  padding-inline: var(--horizontal-main-margin);
  padding-top: calc(24px + 115px);
  width: 100%;
  min-height: 100svh;
  justify-content: center;
  align-items: center;

  @media (height < 768px) {
    gap: 5svh;
  }
}

:host-context(.dark) .search-container {
  background-color: rgb(23 29 207);
}

.search-container:is(.active, .collapsed) {
  top: 0;
  border-radius: 24px;
  padding: 24px;
  margin-top: var(--header-height);
  width: calc(100% - calc(2 * var(--horizontal-main-margin)));
  min-height: 0;
}

.search-container.collapsed {
  flex-direction: column;
  gap: 40px;

  @media (width > 768px) {
    flex-direction: row;
    justify-content: space-around;
    gap: 10vw;
  }
}

.search-by-category, .search-by-text {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 24px;
}

@media (width < 768px) {
  .search-by-category, .search-by-text {
    gap: 20px;
  }
}

.collapsed:not(.active) :is(.search-by-category, .search-by-text) {
  gap: 20px;
}

.search-by-text > .checkbox-container {
  display: flex;
  justify-content: center;
}

.arrow-back {
  display: inline-flex;
  align-items: center;
  padding: 4px;
  border-radius: 16px;
  cursor: pointer;
  transition: background 0.3s ease;

  &:hover {
    background-color: rgba(255, 255, 255, 0.1);
  }
}

.selected-container, .container {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  width: -webkit-fill-available;
  width: -moz-available;
}

.selected-container {
  gap: 24px;
}

.container {
  justify-content: center;
  gap: 32px;
}

@media (width < 768px) {
  .selected-container, .container {
    gap: 16px;
  }
}

.collapsed:not(.active) .container {
  gap: 16px;
}

:is(.selected-container, .container) > div {
  display: flex;
  justify-content: center;
  align-items: center;
  backdrop-filter: blur(10px);
  border-radius: 16px;
  padding: 16px 32px;
  font-size: 1.25rem;
  line-height: 1.75rem;
  text-shadow: 1px 1px 2px rgba(0, 0, 0, 0.1);
  cursor: pointer;
  transition: background 400ms ease, opacity 400ms ease;
}

@media (width < 768px) {
  :is(.selected-container, .container) > div {
    padding: 8px 16px;
    font-size: 1rem;
    line-height: 1.5rem;
    border-radius: 8px;
  }
}

.collapsed:not(.active) .container > div {
  padding: 8px 16px;
  font-size: 1rem;
  line-height: 1.5rem;
  border-radius: 8px;
}

.selected-container > div {
  background: rgba(0, 0, 127, 0.5);
  opacity: 1;
}

/*
When one of the categories in the selected stack is hovered, the rest of following
categories will be dimmed to indicate that clicking on the hovered category will
move the user to that level.
*/
.selected-container > div:hover ~ div {
  opacity: 0.4;
}

.container > div {
  background: rgba(255, 255, 255, 0.1);
}

.container > div:hover {
  animation: pulse 1.75s cubic-bezier(0.39, 0.58, 0.57, 1);
  background: rgba(255, 255, 255, 0.2);
}

.selected-container > div:has(> button) {
  transition: all 400ms ease;
  cursor: initial;
}

.selected-container > div:has(> button):hover,
.selected-container > div:has(> button:focus) {
  padding-inline: 24px 12px;
}

:is(.selected-container, .container) > div button {
  flex: 0;
  opacity: 0;
  transition: inherit;
  margin: 0;
  border: none;
  border-radius: 24px;
  background: none;
  padding: 0;
  width: 0;
  min-width: 0;
  color: inherit;
  line-height: 0;
}

.selected-container > div:hover button,
.selected-container > div button:focus {
  flex: 1;
  opacity: 1;
  margin-left: 8px;
  width: 24px;
}

.selected-container > div button:hover {
  background: rgba(255, 255, 255, 0.15);
}

.search-by-text > div {
  position: relative;
}

input[type="text"] {
  backdrop-filter: blur(10px);
  transition:
    background-color 0.3s ease,
    box-shadow 0.3s ease;
  border: none;
  border-radius: 16px;
  background-color: rgba(255, 255, 255, 0.1);
  padding: 16px 68px 16px 24px;
  width: 100%;
  color: white;
  font-size: 1.25rem;
  line-height: 1.75rem;
}

@media (width < 768px) {
  input[type="text"] {
    padding: 12px 52px 12px 16px;
    border-radius: 12px;
    font-size: 1.125rem;
    line-height: 1.75rem;
  }
}

.collapsed:not(.active) input[type="text"] {
  padding: 12px 52px 12px 16px;
  border-radius: 12px;
  font-size: 1.125rem;
  line-height: 1.75rem;
}

input[type="text"]::placeholder {
  opacity: 1;
  color: rgba(255, 255, 255, 0.7);
}

input[type="text"]:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(0, 123, 255, 0.5);
  background-color: rgba(255, 255, 255, 0.2);
}

input[type="text"] + button {
  position: absolute;
  top: 50%;
  right: 10px;
  transform: translateY(-50%);
  transition: background 0.3s ease;
  cursor: pointer;
  border: none;
  border-radius: 6px;
  background: none;
  padding: 5px;
  color: white;
  font-size: 1.5rem;
  line-height: 2rem;
  line-height: 0;
}

input[type="text"] + button:hover {
  background: rgba(255, 255, 255, 0.1);
}

/* Hide the original checkbox */
.checkbox-container {
  input[type="checkbox"] {
    height: 0;
    width: 0;
    opacity: 0;
    position: absolute;
  }

  label {
    position: relative;
    display: flex;
    align-items: center;
    cursor: pointer;
    font-weight: 500;
    padding-left: 32px;
    user-select: none;
  }

  label:before {
    content: "";
    height: 20px;
    width: 20px;
    background-color: white;
    border: 2px solid rgb(var(--slate-300));
    border-radius: 4px;
    position: absolute;
    left: 0;
    transition: all 0.2s ease;
  }

  /* Checkmark */
  label:after {
    content: "";
    position: absolute;
    left: 7px;
    top: 3px;
    width: 6px;
    height: 12px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg) scale(0);
    opacity: 0;
    transition: all 0.2s ease;
  }

  /* Checked state */
  input:checked + label:before {
    background-color: rgb(var(--slate-900));
    border-color: rgb(var(--slate-900));
  }

  input:checked + label:after {
    opacity: 1;
    transform: rotate(45deg) scale(1);
  }

  /* Hover effect */
  label:hover:before {
    background-color: rgb(var(--slate-200));
    border-color: rgb(var(--slate-900));
  }
}

p {
  margin: 0;
  font-weight: bold;
  font-size: 1.875rem;
  line-height: 2.25rem;
  text-align: center;
}

@media (width < 768px) {
  p {
    font-size: 1.5rem;
    line-height: 2rem;
  }
}

.collapsed:not(.active) p {
  font-size: 1.5rem;
  line-height: 2rem;
}

app-search-list {
  transition: margin-block 400ms cubic-bezier(0.57, 0, 0, 1);
}

.search-container:is(.active, .collapsed) + app-search-list {
  margin-block: 24px;
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.2);
  }

  70% {
    box-shadow: 0 0 0 8px rgba(255, 255, 255, 0);
  }

  100% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0);
  }
}
