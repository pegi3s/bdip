:host {
  padding-right: var(--horizontal-main-margin);
  padding-left: var(--horizontal-main-margin);

  width: -webkit-fill-available;
  width: -moz-available;
}

/* Drop shadow */
.container-item {
  /* https://codepen.io/jh3y/pen/yLWgjpd */
  --tint: 222;
  --alpha: 4;
  --base: hsl(var(--tint, 214) 50% 40% / calc(var(--alpha, 4) * 1%));
  --shade: hsl(from var(--base) calc(h + 8) 25 calc(l - 5));
  --perfect-shadow: 0 0 0 1px var(--base), 0 1px 1px -0.5px var(--shade),
    0 3px 3px -1.5px var(--shade), 0 6px 6px -3px var(--shade),
    0 12px 12px -6px var(--base), 0 24px 24px -12px var(--base);
  transition: box-shadow 0.4s ease;
  box-shadow: var(--perfect-shadow);
  background-color: white;
}

.container-item:hover {
  --alpha: 6;
}

:host-context(.dark) .container-item {
  box-shadow: rgb(0 0 0 / 20%) 0 4px 14px 2px;
  background-color: rgba(var(--slate-700), 0.4);
}

/* Tabs */
.listing-options {
  display: flex;
  justify-content: flex-end;
  gap: 16px;
  margin-bottom: 24px;

  app-tabs {
    margin-bottom: 0;
  }
}

/* Grid */
.category-container {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  column-gap: 14px;
  row-gap: 14px;
}

.container-item {
  display: grid;
  grid-template-rows: min-content 1fr;
  row-gap: 12px;
  height: 100%;
  border-radius: 16px;
  padding: 16px 24px;
  transition: transform 0.4s ease, box-shadow 0.4s ease;
  /* Hack: The transition to scale down the card blurs a bit the element. When the transition finishes,
  the blur effect is removed and the renders again to adapt to the new size. This causes a flicker effect.
  To avoid this, the will-change property is added to the element. This property makes the element keep the
  blur effect. As it's just doing it on hover, IMO it's better to keep the blur than the flicker effect. */
  will-change: transform;

  &.updated {
    --tint: 275;
    --alpha: 6;
    background: linear-gradient(to top, hsl(var(--tint) 100% 97% / 0.6), white);

    &::after {
      content: 'Updated';
    }
  }

  &.new {
    --tint: 150;
    --alpha: 6;
    background: linear-gradient(to top, hsl(var(--tint) 100% 97% / 0.8), white);

    &::after {
      content: 'New';
    }
  }

  &.not-recommended {
    --tint: 35;
    --alpha: 6;
    background: linear-gradient(to top, hsl(var(--tint) 100% 97% / 0.7), white);

    &::after {
      content: 'Not recommended';
    }
  }

  &.unusable {
    --tint: 0;
    --alpha: 6;
    background: linear-gradient(to top, hsl(var(--tint) 100% 97% / 0.7), white);

    &::after {
      content: 'Unusable';
    }
  }

  &:is(.new, .updated, .unusable, .not-recommended)::after {
    position: absolute;
    bottom: -5px;
    right: -5px;
    background-color: hsl(var(--tint) 100% 85%);
    padding: 3px 6px;
    border-radius: 7px;
    font-size: 0.75rem;
    line-height: 1rem;
    font-weight: 600;
    box-shadow: 0 2px 6px hsl(var(--tint) 75% 30% / 0.4), 0 0 0 1px hsl(var(--tint) 100% 90%);
  }

  &:is(.new, .updated, .unusable, .not-recommended)::after {
    --alpha: 8;
  }

  .header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 16px;
  }

  .header > span {
    font-size: 1.125rem;
    line-height: 1.75rem;
    margin: 0;
    font-weight: 600;
  }

  p {
    margin: 0;
    font-size: 1rem;
    line-height: 1.5rem;
  }
}

:host-context(.dark) .container-item.new,
:host-context(.dark) .container-item.updated,
:host-context(.dark) .container-item.unusable,
:host-context(.dark) .container-item.not-recommended {
  background: linear-gradient(to top, hsl(var(--tint) 100% 70% / 0.15), rgba(var(--slate-700), 0.4) 75%);
}

:host-context(.dark) .container-item.new::after,
:host-context(.dark) .container-item.updated::after,
:host-context(.dark) .container-item.unusable::after,
:host-context(.dark) .container-item.not-recommended::after {
  background-color: hsl(var(--tint) 100% 25%);
  box-shadow: 0 2px 6px hsl(var(--tint) 75% 30% / 0.4), 0 0 0 1px hsl(var(--tint) 100% 30%);
}

.compact .container-item {
  grid-template-rows: min-content;
  align-content: center;
}

.container-item:hover {
  transform: scale(0.97);
}

.container-item:active {
  transform: scale(0.93);
}
